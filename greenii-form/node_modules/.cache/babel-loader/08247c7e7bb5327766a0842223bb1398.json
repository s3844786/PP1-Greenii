{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.YearParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n\nclass YearParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 130);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    var valueCallback = function (year) {\n      return {\n        year: year,\n        isTwoDigitYear: token === 'yy'\n      };\n    };\n\n    switch (token) {\n      case 'y':\n        return (0, _utils.mapValue)((0, _utils.parseNDigits)(4, dateString), valueCallback);\n\n      case 'yo':\n        return (0, _utils.mapValue)(match.ordinalNumber(dateString, {\n          unit: 'year'\n        }), valueCallback);\n\n      default:\n        return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    var currentYear = date.getUTCFullYear();\n\n    if (value.isTwoDigitYear) {\n      var normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(value.year, currentYear);\n      date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n\n    var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setUTCFullYear(year, 0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.YearParser = YearParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","YearParser","_Parser","require","_utils","_defineProperty","obj","key","enumerable","configurable","writable","Parser","constructor","arguments","parse","dateString","token","match","valueCallback","year","isTwoDigitYear","mapValue","parseNDigits","ordinalNumber","unit","length","validate","_date","set","date","flags","currentYear","getUTCFullYear","normalizedTwoDigitYear","normalizeTwoDigitYear","setUTCFullYear","setUTCHours","era"],"sources":["/Users/derek/Desktop/Coding/React/greenii-form/node_modules/date-fns/parse/_lib/parsers/YearParser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.YearParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nclass YearParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 130);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    var valueCallback = function (year) {\n      return {\n        year: year,\n        isTwoDigitYear: token === 'yy'\n      };\n    };\n\n    switch (token) {\n      case 'y':\n        return (0, _utils.mapValue)((0, _utils.parseNDigits)(4, dateString), valueCallback);\n\n      case 'yo':\n        return (0, _utils.mapValue)(match.ordinalNumber(dateString, {\n          unit: 'year'\n        }), valueCallback);\n\n      default:\n        return (0, _utils.mapValue)((0, _utils.parseNDigits)(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    var currentYear = date.getUTCFullYear();\n\n    if (value.isTwoDigitYear) {\n      var normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(value.year, currentYear);\n      date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n\n    var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setUTCFullYear(year, 0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.YearParser = YearParser;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAApB;;AAEA,SAASE,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCP,KAAnC,EAA0C;EAAE,IAAIO,GAAG,IAAID,GAAX,EAAgB;IAAET,MAAM,CAACC,cAAP,CAAsBQ,GAAtB,EAA2BC,GAA3B,EAAgC;MAAEP,KAAK,EAAEA,KAAT;MAAgBQ,UAAU,EAAE,IAA5B;MAAkCC,YAAY,EAAE,IAAhD;MAAsDC,QAAQ,EAAE;IAAhE,CAAhC;EAA0G,CAA5H,MAAkI;IAAEJ,GAAG,CAACC,GAAD,CAAH,GAAWP,KAAX;EAAmB;;EAAC,OAAOM,GAAP;AAAa,C,CAEjN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAML,UAAN,SAAyBC,OAAO,CAACS,MAAjC,CAAwC;EACtCC,WAAW,GAAG;IACZ,MAAM,GAAGC,SAAT;;IAEAR,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,GAAnB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,CAA7B,CAAf;EACD;;EAEDS,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,IAAIC,aAAa,GAAG,UAAUC,IAAV,EAAgB;MAClC,OAAO;QACLA,IAAI,EAAEA,IADD;QAELC,cAAc,EAAEJ,KAAK,KAAK;MAFrB,CAAP;IAID,CALD;;IAOA,QAAQA,KAAR;MACE,KAAK,GAAL;QACE,OAAO,CAAC,GAAGZ,MAAM,CAACiB,QAAX,EAAqB,CAAC,GAAGjB,MAAM,CAACkB,YAAX,EAAyB,CAAzB,EAA4BP,UAA5B,CAArB,EAA8DG,aAA9D,CAAP;;MAEF,KAAK,IAAL;QACE,OAAO,CAAC,GAAGd,MAAM,CAACiB,QAAX,EAAqBJ,KAAK,CAACM,aAAN,CAAoBR,UAApB,EAAgC;UAC1DS,IAAI,EAAE;QADoD,CAAhC,CAArB,EAEHN,aAFG,CAAP;;MAIF;QACE,OAAO,CAAC,GAAGd,MAAM,CAACiB,QAAX,EAAqB,CAAC,GAAGjB,MAAM,CAACkB,YAAX,EAAyBN,KAAK,CAACS,MAA/B,EAAuCV,UAAvC,CAArB,EAAyEG,aAAzE,CAAP;IAVJ;EAYD;;EAEDQ,QAAQ,CAACC,KAAD,EAAQ3B,KAAR,EAAe;IACrB,OAAOA,KAAK,CAACoB,cAAN,IAAwBpB,KAAK,CAACmB,IAAN,GAAa,CAA5C;EACD;;EAEDS,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAc9B,KAAd,EAAqB;IACtB,IAAI+B,WAAW,GAAGF,IAAI,CAACG,cAAL,EAAlB;;IAEA,IAAIhC,KAAK,CAACoB,cAAV,EAA0B;MACxB,IAAIa,sBAAsB,GAAG,CAAC,GAAG7B,MAAM,CAAC8B,qBAAX,EAAkClC,KAAK,CAACmB,IAAxC,EAA8CY,WAA9C,CAA7B;MACAF,IAAI,CAACM,cAAL,CAAoBF,sBAApB,EAA4C,CAA5C,EAA+C,CAA/C;MACAJ,IAAI,CAACO,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;MACA,OAAOP,IAAP;IACD;;IAED,IAAIV,IAAI,GAAG,EAAE,SAASW,KAAX,KAAqBA,KAAK,CAACO,GAAN,KAAc,CAAnC,GAAuCrC,KAAK,CAACmB,IAA7C,GAAoD,IAAInB,KAAK,CAACmB,IAAzE;IACAU,IAAI,CAACM,cAAL,CAAoBhB,IAApB,EAA0B,CAA1B,EAA6B,CAA7B;IACAU,IAAI,CAACO,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;IACA,OAAOP,IAAP;EACD;;AAjDqC;;AAqDxC9B,OAAO,CAACE,UAAR,GAAqBA,UAArB"},"metadata":{},"sourceType":"script"}