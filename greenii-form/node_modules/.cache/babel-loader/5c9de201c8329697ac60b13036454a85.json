{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DayOfYearParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass DayOfYearParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 90);\n\n    _defineProperty(this, \"subpriority\", 1);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'D':\n      case 'DD':\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.dayOfYear, dateString);\n\n      case 'Do':\n        return match.ordinalNumber(dateString, {\n          unit: 'date'\n        });\n\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    var year = date.getUTCFullYear();\n    var isLeapYear = (0, _utils.isLeapYearIndex)(year);\n\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setUTCMonth(0, value);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.DayOfYearParser = DayOfYearParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","DayOfYearParser","_Parser","require","_constants","_utils","_defineProperty","obj","key","enumerable","configurable","writable","Parser","constructor","arguments","parse","dateString","token","match","parseNumericPattern","numericPatterns","dayOfYear","ordinalNumber","unit","parseNDigits","length","validate","date","year","getUTCFullYear","isLeapYear","isLeapYearIndex","set","_flags","setUTCMonth","setUTCHours"],"sources":["/Users/derek/Desktop/Coding/React/greenii-form/node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DayOfYearParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass DayOfYearParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 90);\n\n    _defineProperty(this, \"subpriority\", 1);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'D':\n      case 'DD':\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.dayOfYear, dateString);\n\n      case 'Do':\n        return match.ordinalNumber(dateString, {\n          unit: 'date'\n        });\n\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    var year = date.getUTCFullYear();\n    var isLeapYear = (0, _utils.isLeapYearIndex)(year);\n\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setUTCMonth(0, value);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.DayOfYearParser = DayOfYearParser;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,iBAAD,CAAxB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAD,CAApB;;AAEA,SAASG,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCR,KAAnC,EAA0C;EAAE,IAAIQ,GAAG,IAAID,GAAX,EAAgB;IAAEV,MAAM,CAACC,cAAP,CAAsBS,GAAtB,EAA2BC,GAA3B,EAAgC;MAAER,KAAK,EAAEA,KAAT;MAAgBS,UAAU,EAAE,IAA5B;MAAkCC,YAAY,EAAE,IAAhD;MAAsDC,QAAQ,EAAE;IAAhE,CAAhC;EAA0G,CAA5H,MAAkI;IAAEJ,GAAG,CAACC,GAAD,CAAH,GAAWR,KAAX;EAAmB;;EAAC,OAAOO,GAAP;AAAa;;AAEjN,MAAMN,eAAN,SAA8BC,OAAO,CAACU,MAAtC,CAA6C;EAC3CC,WAAW,GAAG;IACZ,MAAM,GAAGC,SAAT;;IAEAR,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,aAAP,EAAsB,CAAtB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,CAA7B,CAAf;EACD;;EAEDS,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,QAAQD,KAAR;MACE,KAAK,GAAL;MACA,KAAK,IAAL;QACE,OAAO,CAAC,GAAGZ,MAAM,CAACc,mBAAX,EAAgCf,UAAU,CAACgB,eAAX,CAA2BC,SAA3D,EAAsEL,UAAtE,CAAP;;MAEF,KAAK,IAAL;QACE,OAAOE,KAAK,CAACI,aAAN,CAAoBN,UAApB,EAAgC;UACrCO,IAAI,EAAE;QAD+B,CAAhC,CAAP;;MAIF;QACE,OAAO,CAAC,GAAGlB,MAAM,CAACmB,YAAX,EAAyBP,KAAK,CAACQ,MAA/B,EAAuCT,UAAvC,CAAP;IAXJ;EAaD;;EAEDU,QAAQ,CAACC,IAAD,EAAO3B,KAAP,EAAc;IACpB,IAAI4B,IAAI,GAAGD,IAAI,CAACE,cAAL,EAAX;IACA,IAAIC,UAAU,GAAG,CAAC,GAAGzB,MAAM,CAAC0B,eAAX,EAA4BH,IAA5B,CAAjB;;IAEA,IAAIE,UAAJ,EAAgB;MACd,OAAO9B,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,GAA9B;IACD,CAFD,MAEO;MACL,OAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,GAA9B;IACD;EACF;;EAEDgC,GAAG,CAACL,IAAD,EAAOM,MAAP,EAAejC,KAAf,EAAsB;IACvB2B,IAAI,CAACO,WAAL,CAAiB,CAAjB,EAAoBlC,KAApB;IACA2B,IAAI,CAACQ,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;IACA,OAAOR,IAAP;EACD;;AA1C0C;;AA8C7C5B,OAAO,CAACE,eAAR,GAA0BA,eAA1B"},"metadata":{},"sourceType":"script"}