{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DayPeriodParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // in the morning, in the afternoon, in the evening, at night\n\n\nclass DayPeriodParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 80);\n\n    _defineProperty(this, \"incompatibleTokens\", ['a', 'b', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return match.dayPeriod(dateString, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return match.dayPeriod(dateString, {\n          width: 'wide',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setUTCHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.DayPeriodParser = DayPeriodParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","DayPeriodParser","_Parser","require","_utils","_defineProperty","obj","key","enumerable","configurable","writable","Parser","constructor","arguments","parse","dateString","token","match","dayPeriod","width","context","set","date","_flags","setUTCHours","dayPeriodEnumToHours"],"sources":["/Users/derek/Desktop/Coding/React/greenii-form/node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DayPeriodParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// in the morning, in the afternoon, in the evening, at night\nclass DayPeriodParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 80);\n\n    _defineProperty(this, \"incompatibleTokens\", ['a', 'b', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return match.dayPeriod(dateString, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return match.dayPeriod(dateString, {\n          width: 'wide',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setUTCHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.DayPeriodParser = DayPeriodParser;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAApB;;AAEA,SAASE,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCP,KAAnC,EAA0C;EAAE,IAAIO,GAAG,IAAID,GAAX,EAAgB;IAAET,MAAM,CAACC,cAAP,CAAsBQ,GAAtB,EAA2BC,GAA3B,EAAgC;MAAEP,KAAK,EAAEA,KAAT;MAAgBQ,UAAU,EAAE,IAA5B;MAAkCC,YAAY,EAAE,IAAhD;MAAsDC,QAAQ,EAAE;IAAhE,CAAhC;EAA0G,CAA5H,MAAkI;IAAEJ,GAAG,CAACC,GAAD,CAAH,GAAWP,KAAX;EAAmB;;EAAC,OAAOM,GAAP;AAAa,C,CAEjN;;;AACA,MAAML,eAAN,SAA8BC,OAAO,CAACS,MAAtC,CAA6C;EAC3CC,WAAW,GAAG;IACZ,MAAM,GAAGC,SAAT;;IAEAR,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAA7B,CAAf;EACD;;EAEDS,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,QAAQD,KAAR;MACE,KAAK,GAAL;MACA,KAAK,IAAL;MACA,KAAK,KAAL;QACE,OAAOC,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;UACjCI,KAAK,EAAE,aAD0B;UAEjCC,OAAO,EAAE;QAFwB,CAA5B,KAGDH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;UAChCI,KAAK,EAAE,QADyB;UAEhCC,OAAO,EAAE;QAFuB,CAA5B,CAHN;;MAQF,KAAK,OAAL;QACE,OAAOH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;UACjCI,KAAK,EAAE,QAD0B;UAEjCC,OAAO,EAAE;QAFwB,CAA5B,CAAP;;MAKF,KAAK,MAAL;MACA;QACE,OAAOH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;UACjCI,KAAK,EAAE,MAD0B;UAEjCC,OAAO,EAAE;QAFwB,CAA5B,KAGDH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;UAChCI,KAAK,EAAE,aADyB;UAEhCC,OAAO,EAAE;QAFuB,CAA5B,CAHC,IAMDH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;UAChCI,KAAK,EAAE,QADyB;UAEhCC,OAAO,EAAE;QAFuB,CAA5B,CANN;IApBJ;EA+BD;;EAEDC,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAevB,KAAf,EAAsB;IACvBsB,IAAI,CAACE,WAAL,CAAiB,CAAC,GAAGpB,MAAM,CAACqB,oBAAX,EAAiCzB,KAAjC,CAAjB,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,CAAhE;IACA,OAAOsB,IAAP;EACD;;AA9C0C;;AAkD7CvB,OAAO,CAACE,eAAR,GAA0BA,eAA1B"},"metadata":{},"sourceType":"script"}