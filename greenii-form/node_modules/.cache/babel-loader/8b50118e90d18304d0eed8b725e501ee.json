{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ISOTimezoneWithZParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // Timezone (ISO-8601. +00:00 is `'Z'`)\n\n\nclass ISOTimezoneWithZParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 10);\n\n    _defineProperty(this, \"incompatibleTokens\", ['t', 'T', 'x']);\n  }\n\n  parse(dateString, token) {\n    switch (token) {\n      case 'X':\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basicOptionalMinutes, dateString);\n\n      case 'XX':\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basic, dateString);\n\n      case 'XXXX':\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basicOptionalSeconds, dateString);\n\n      case 'XXXXX':\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.extendedOptionalSeconds, dateString);\n\n      case 'XXX':\n      default:\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) {\n      return date;\n    }\n\n    return new Date(date.getTime() - value);\n  }\n\n}\n\nexports.ISOTimezoneWithZParser = ISOTimezoneWithZParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","ISOTimezoneWithZParser","_Parser","require","_constants","_utils","_defineProperty","obj","key","enumerable","configurable","writable","Parser","constructor","arguments","parse","dateString","token","parseTimezonePattern","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extendedOptionalSeconds","extended","set","date","flags","timestampIsSet","Date","getTime"],"sources":["/Users/derek/Desktop/Coding/React/greenii-form/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ISOTimezoneWithZParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nclass ISOTimezoneWithZParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 10);\n\n    _defineProperty(this, \"incompatibleTokens\", ['t', 'T', 'x']);\n  }\n\n  parse(dateString, token) {\n    switch (token) {\n      case 'X':\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basicOptionalMinutes, dateString);\n\n      case 'XX':\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basic, dateString);\n\n      case 'XXXX':\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.basicOptionalSeconds, dateString);\n\n      case 'XXXXX':\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.extendedOptionalSeconds, dateString);\n\n      case 'XXX':\n      default:\n        return (0, _utils.parseTimezonePattern)(_constants.timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) {\n      return date;\n    }\n\n    return new Date(date.getTime() - value);\n  }\n\n}\n\nexports.ISOTimezoneWithZParser = ISOTimezoneWithZParser;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GAAiC,KAAK,CAAtC;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,iBAAD,CAAxB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAD,CAApB;;AAEA,SAASG,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCR,KAAnC,EAA0C;EAAE,IAAIQ,GAAG,IAAID,GAAX,EAAgB;IAAEV,MAAM,CAACC,cAAP,CAAsBS,GAAtB,EAA2BC,GAA3B,EAAgC;MAAER,KAAK,EAAEA,KAAT;MAAgBS,UAAU,EAAE,IAA5B;MAAkCC,YAAY,EAAE,IAAhD;MAAsDC,QAAQ,EAAE;IAAhE,CAAhC;EAA0G,CAA5H,MAAkI;IAAEJ,GAAG,CAACC,GAAD,CAAH,GAAWR,KAAX;EAAmB;;EAAC,OAAOO,GAAP;AAAa,C,CAEjN;;;AACA,MAAMN,sBAAN,SAAqCC,OAAO,CAACU,MAA7C,CAAoD;EAClDC,WAAW,GAAG;IACZ,MAAM,GAAGC,SAAT;;IAEAR,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA7B,CAAf;EACD;;EAEDS,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoB;IACvB,QAAQA,KAAR;MACE,KAAK,GAAL;QACE,OAAO,CAAC,GAAGZ,MAAM,CAACa,oBAAX,EAAiCd,UAAU,CAACe,gBAAX,CAA4BC,oBAA7D,EAAmFJ,UAAnF,CAAP;;MAEF,KAAK,IAAL;QACE,OAAO,CAAC,GAAGX,MAAM,CAACa,oBAAX,EAAiCd,UAAU,CAACe,gBAAX,CAA4BE,KAA7D,EAAoEL,UAApE,CAAP;;MAEF,KAAK,MAAL;QACE,OAAO,CAAC,GAAGX,MAAM,CAACa,oBAAX,EAAiCd,UAAU,CAACe,gBAAX,CAA4BG,oBAA7D,EAAmFN,UAAnF,CAAP;;MAEF,KAAK,OAAL;QACE,OAAO,CAAC,GAAGX,MAAM,CAACa,oBAAX,EAAiCd,UAAU,CAACe,gBAAX,CAA4BI,uBAA7D,EAAsFP,UAAtF,CAAP;;MAEF,KAAK,KAAL;MACA;QACE,OAAO,CAAC,GAAGX,MAAM,CAACa,oBAAX,EAAiCd,UAAU,CAACe,gBAAX,CAA4BK,QAA7D,EAAuER,UAAvE,CAAP;IAfJ;EAiBD;;EAEDS,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAc3B,KAAd,EAAqB;IACtB,IAAI2B,KAAK,CAACC,cAAV,EAA0B;MACxB,OAAOF,IAAP;IACD;;IAED,OAAO,IAAIG,IAAJ,CAASH,IAAI,CAACI,OAAL,KAAiB9B,KAA1B,CAAP;EACD;;AAnCiD;;AAuCpDD,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC"},"metadata":{},"sourceType":"script"}