{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        if (response.data.roles[0] === 'ROLE_USER') {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n          localStorage.setItem(\"role\", \"user\");\n        } else if (response.data.roles[0] === 'ROLE_DRIVER') {\n          localStorage.setItem(\"driver\", JSON.stringify(response.data));\n          localStorage.setItem(\"role\", \"driver\");\n        }\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"driver\");\n  }\n\n  driverRegister(username, email, password, role, phone) {\n    console.log(username, email, password, role, phone);\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      role,\n      phone\n    });\n  }\n\n  userRegister(username, email, password, role) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      role\n    });\n  }\n\n  order(formData) {\n    console.log(\"yeeeeeeeeeeeeeeeeee\");\n    console.log(formData.get('senderName'));\n    console.log(formData.get('senderPhonenumber'));\n    console.log(formData.get('senderAddress'));\n    console.log(formData.get('receiverName'));\n    console.log(formData.get('receiverPhonenumber'));\n    console.log(formData.get('receiverAddress'));\n    console.log(formData.get('productType'));\n    console.log(formData.get('productWeight'));\n    console.log(formData.get('startDate'));\n    console.log(formData.get('startTime'));\n    console.log(formData.get('returnLabel'));\n    console.log(\"asdasdadasdadas\");\n    return axios({\n      method: 'POST',\n      url: API_URL + 'orders/create',\n      contentType: \"application/json\",\n      data: formData\n    }); // return axios.post(API_URL + \"orders/create\",{\n    //   formData\n    // })\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n  getCurrentDriver() {\n    return JSON.parse(localStorage.getItem('driver'));\n    ;\n  }\n\n  getCurrentRole() {\n    return localStorage.getItem(\"role\");\n  }\n\n  getOrderList() {\n    const userID = this.getCurrentUser().id; // return axios({\n    //   method: 'GET',\n    //   url: API_URL + 'orders/create',\n    //   contentType: \"application/json\",\n    //   data: formData\n    // }\n\n    return axios({\n      method: 'GET',\n      url: API_URL + 'orders/getAll',\n      contentType: \"application/json\",\n      params: {\n        userid: userID\n      }\n    }); // return axios.get(API_URL + 'getAll',userID);\n  }\n\n  getOrderDetails(orderID) {\n    // let formData = new FormData()\n    // formData.append('id',5)\n    return axios({\n      method: 'GET',\n      url: API_URL + 'orders/getOrder',\n      contentType: \"application/json\",\n      params: {\n        id: orderID\n      }\n    });\n  }\n\n  getWaitingOrder() {\n    return axios({\n      method: 'GET',\n      url: API_URL + 'orders/getWaitingOrder',\n      contentType: \"application/json\" // params:{\n      //\n      // }\n\n    }); // return axios.get(API_URL + 'getAll',userID);\n  }\n\n  getDriverOrders() {\n    const driverID = this.getCurrentDriver().id;\n    return axios({\n      method: 'GET',\n      url: API_URL + 'orders/getDriverOrders',\n      contentType: \"application/json\",\n      params: {\n        id: driverID\n      }\n    });\n  }\n\n  acceptOrder(orderID) {\n    const driverID = this.getCurrentDriver().id;\n    console.log(orderID, driverID);\n    const id = parseInt(orderID);\n    return axios.put(API_URL + \"orders/acceptOrder\", {\n      id,\n      driverID\n    }); // return axios({\n    //   method: 'PUT',\n    //   url: API_URL + 'orders/acceptOrder',\n    //   contentType: \"application/json\",\n    //   params:{\n    //     orderID,\n    //     driverID\n    //   }\n    // })\n  }\n\n  updateProcess(orderID, process) {\n    process = process + 1;\n    console.log(orderID, process);\n    const id = parseInt(orderID);\n    return axios.put(API_URL + \"orders/updateOrder\", {\n      id,\n      process\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"names":["axios","qs","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","roles","localStorage","setItem","JSON","stringify","logout","removeItem","driverRegister","email","role","phone","console","log","userRegister","order","formData","get","method","url","contentType","getCurrentUser","parse","getItem","getCurrentDriver","getCurrentRole","getOrderList","userID","id","params","userid","getOrderDetails","orderID","getWaitingOrder","getDriverOrders","driverID","acceptOrder","parseInt","put","updateProcess","process"],"sources":["/Users/derek/Desktop/Coding/React/greenii-form/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          if (response.data.roles[0] === 'ROLE_USER'){\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\n            localStorage.setItem(\"role\",\"user\");\n          }else if(response.data.roles[0] === 'ROLE_DRIVER'){\n            localStorage.setItem(\"driver\", JSON.stringify(response.data));\n            localStorage.setItem(\"role\",\"driver\")\n          }\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"driver\");\n  }\n\n  driverRegister(username, email, password, role, phone) {\n    console.log(username, email, password, role, phone)\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      role,\n      phone\n    });\n  }\n\n  userRegister(username,email,password,role){\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      role\n    });\n  }\n\n  order(formData){\n    console.log(\"yeeeeeeeeeeeeeeeeee\")\n    console.log(formData.get('senderName'))\n    console.log(formData.get('senderPhonenumber'))\n    console.log(formData.get('senderAddress'))\n    console.log(formData.get('receiverName'))\n    console.log(formData.get('receiverPhonenumber'))\n    console.log(formData.get('receiverAddress'))\n    console.log(formData.get('productType'))\n    console.log(formData.get('productWeight'))\n    console.log(formData.get('startDate'))\n    console.log(formData.get('startTime'))\n    console.log(formData.get('returnLabel'))\n    console.log(\"asdasdadasdadas\")\n\n    return axios({\n      method: 'POST',\n      url: API_URL + 'orders/create',\n      contentType: \"application/json\",\n      data: formData\n    })\n\n    // return axios.post(API_URL + \"orders/create\",{\n    //   formData\n    // })\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n\n  getCurrentDriver() {\n    return JSON.parse(localStorage.getItem('driver'));;\n  }\n\n  getCurrentRole(){\n    return localStorage.getItem(\"role\");\n  }\n\n  getOrderList() {\n    const userID= this.getCurrentUser().id\n    // return axios({\n    //   method: 'GET',\n    //   url: API_URL + 'orders/create',\n    //   contentType: \"application/json\",\n    //   data: formData\n    // }\n    return axios({\n      method: 'GET',\n      url: API_URL + 'orders/getAll',\n      contentType: \"application/json\",\n      params:{\n        userid : userID\n      }\n    })\n    // return axios.get(API_URL + 'getAll',userID);\n  }\n\n  getOrderDetails(orderID){\n    // let formData = new FormData()\n    // formData.append('id',5)\n\n    return axios({\n      method: 'GET',\n      url: API_URL + 'orders/getOrder',\n      contentType: \"application/json\",\n      params:{\n        id : orderID\n      }\n    })\n  }\n\n  getWaitingOrder() {\n    return axios({\n      method: 'GET',\n      url: API_URL + 'orders/getWaitingOrder',\n      contentType: \"application/json\",\n      // params:{\n      //\n      // }\n    })\n    // return axios.get(API_URL + 'getAll',userID);\n  }\n\n  getDriverOrders(){\n    const driverID = this.getCurrentDriver().id\n    return axios({\n      method: 'GET',\n      url: API_URL + 'orders/getDriverOrders',\n      contentType: \"application/json\",\n      params:{\n        id : driverID\n      }\n    })\n  }\n\n  acceptOrder(orderID){\n    const driverID= this.getCurrentDriver().id\n    console.log(orderID,driverID)\n    const id = parseInt(orderID)\n    return axios.put(API_URL + \"orders/acceptOrder\", {\n      id,\n      driverID\n    });\n    // return axios({\n    //   method: 'PUT',\n    //   url: API_URL + 'orders/acceptOrder',\n    //   contentType: \"application/json\",\n    //   params:{\n    //     orderID,\n    //     driverID\n    //   }\n    // })\n  }\n\n  updateProcess(orderID,process){\n    process = process + 1\n    console.log(orderID,process)\n    const id = parseInt(orderID)\n    return axios.put(API_URL + \"orders/updateOrder\", {\n      id,\n      process\n    });\n  }\n\n\n\n}\n\nexport default new AuthService();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}