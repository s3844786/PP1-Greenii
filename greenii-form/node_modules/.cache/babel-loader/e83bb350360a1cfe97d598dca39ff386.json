{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StandAloneMonthParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass StandAloneMonthParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 110);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    var valueCallback = function (value) {\n      return value - 1;\n    };\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return (0, _utils.mapValue)((0, _utils.parseNumericPattern)(_constants.numericPatterns.month, dateString), valueCallback);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return (0, _utils.mapValue)((0, _utils.parseNDigits)(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return (0, _utils.mapValue)(match.ordinalNumber(dateString, {\n          unit: 'month'\n        }), valueCallback);\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return match.month(dateString, {\n          width: 'abbreviated',\n          context: 'standalone'\n        }) || match.month(dateString, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return match.month(dateString, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return match.month(dateString, {\n          width: 'wide',\n          context: 'standalone'\n        }) || match.month(dateString, {\n          width: 'abbreviated',\n          context: 'standalone'\n        }) || match.month(dateString, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setUTCMonth(value, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.StandAloneMonthParser = StandAloneMonthParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","StandAloneMonthParser","_Parser","require","_constants","_utils","_defineProperty","obj","key","enumerable","configurable","writable","Parser","constructor","arguments","parse","dateString","token","match","valueCallback","mapValue","parseNumericPattern","numericPatterns","month","parseNDigits","ordinalNumber","unit","width","context","validate","_date","set","date","_flags","setUTCMonth","setUTCHours"],"sources":["/Users/derek/Desktop/Coding/React/greenii-form/node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StandAloneMonthParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass StandAloneMonthParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 110);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    var valueCallback = function (value) {\n      return value - 1;\n    };\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return (0, _utils.mapValue)((0, _utils.parseNumericPattern)(_constants.numericPatterns.month, dateString), valueCallback);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return (0, _utils.mapValue)((0, _utils.parseNDigits)(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return (0, _utils.mapValue)(match.ordinalNumber(dateString, {\n          unit: 'month'\n        }), valueCallback);\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return match.month(dateString, {\n          width: 'abbreviated',\n          context: 'standalone'\n        }) || match.month(dateString, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return match.month(dateString, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return match.month(dateString, {\n          width: 'wide',\n          context: 'standalone'\n        }) || match.month(dateString, {\n          width: 'abbreviated',\n          context: 'standalone'\n        }) || match.month(dateString, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setUTCMonth(value, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}\n\nexports.StandAloneMonthParser = StandAloneMonthParser;"],"mappings":"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"},"metadata":{},"sourceType":"script"}