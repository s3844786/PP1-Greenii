{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parsers = void 0;\n\nvar _EraParser = require(\"./EraParser.js\");\n\nvar _YearParser = require(\"./YearParser.js\");\n\nvar _LocalWeekYearParser = require(\"./LocalWeekYearParser.js\");\n\nvar _ISOWeekYearParser = require(\"./ISOWeekYearParser.js\");\n\nvar _ExtendedYearParser = require(\"./ExtendedYearParser.js\");\n\nvar _QuarterParser = require(\"./QuarterParser.js\");\n\nvar _StandAloneQuarterParser = require(\"./StandAloneQuarterParser.js\");\n\nvar _MonthParser = require(\"./MonthParser.js\");\n\nvar _StandAloneMonthParser = require(\"./StandAloneMonthParser.js\");\n\nvar _LocalWeekParser = require(\"./LocalWeekParser.js\");\n\nvar _ISOWeekParser = require(\"./ISOWeekParser.js\");\n\nvar _DateParser = require(\"./DateParser.js\");\n\nvar _DayOfYearParser = require(\"./DayOfYearParser.js\");\n\nvar _DayParser = require(\"./DayParser.js\");\n\nvar _LocalDayParser = require(\"./LocalDayParser.js\");\n\nvar _StandAloneLocalDayParser = require(\"./StandAloneLocalDayParser.js\");\n\nvar _ISODayParser = require(\"./ISODayParser.js\");\n\nvar _AMPMParser = require(\"./AMPMParser.js\");\n\nvar _AMPMMidnightParser = require(\"./AMPMMidnightParser.js\");\n\nvar _DayPeriodParser = require(\"./DayPeriodParser.js\");\n\nvar _Hour1to12Parser = require(\"./Hour1to12Parser.js\");\n\nvar _Hour0to23Parser = require(\"./Hour0to23Parser.js\");\n\nvar _Hour0To11Parser = require(\"./Hour0To11Parser.js\");\n\nvar _Hour1To24Parser = require(\"./Hour1To24Parser.js\");\n\nvar _MinuteParser = require(\"./MinuteParser.js\");\n\nvar _SecondParser = require(\"./SecondParser.js\");\n\nvar _FractionOfSecondParser = require(\"./FractionOfSecondParser.js\");\n\nvar _ISOTimezoneWithZParser = require(\"./ISOTimezoneWithZParser.js\");\n\nvar _ISOTimezoneParser = require(\"./ISOTimezoneParser.js\");\n\nvar _TimestampSecondsParser = require(\"./TimestampSecondsParser.js\");\n\nvar _TimestampMillisecondsParser = require(\"./TimestampMillisecondsParser.js\");\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  G: new _EraParser.EraParser(),\n  y: new _YearParser.YearParser(),\n  Y: new _LocalWeekYearParser.LocalWeekYearParser(),\n  R: new _ISOWeekYearParser.ISOWeekYearParser(),\n  u: new _ExtendedYearParser.ExtendedYearParser(),\n  Q: new _QuarterParser.QuarterParser(),\n  q: new _StandAloneQuarterParser.StandAloneQuarterParser(),\n  M: new _MonthParser.MonthParser(),\n  L: new _StandAloneMonthParser.StandAloneMonthParser(),\n  w: new _LocalWeekParser.LocalWeekParser(),\n  I: new _ISOWeekParser.ISOWeekParser(),\n  d: new _DateParser.DateParser(),\n  D: new _DayOfYearParser.DayOfYearParser(),\n  E: new _DayParser.DayParser(),\n  e: new _LocalDayParser.LocalDayParser(),\n  c: new _StandAloneLocalDayParser.StandAloneLocalDayParser(),\n  i: new _ISODayParser.ISODayParser(),\n  a: new _AMPMParser.AMPMParser(),\n  b: new _AMPMMidnightParser.AMPMMidnightParser(),\n  B: new _DayPeriodParser.DayPeriodParser(),\n  h: new _Hour1to12Parser.Hour1to12Parser(),\n  H: new _Hour0to23Parser.Hour0to23Parser(),\n  K: new _Hour0To11Parser.Hour0To11Parser(),\n  k: new _Hour1To24Parser.Hour1To24Parser(),\n  m: new _MinuteParser.MinuteParser(),\n  s: new _SecondParser.SecondParser(),\n  S: new _FractionOfSecondParser.FractionOfSecondParser(),\n  X: new _ISOTimezoneWithZParser.ISOTimezoneWithZParser(),\n  x: new _ISOTimezoneParser.ISOTimezoneParser(),\n  t: new _TimestampSecondsParser.TimestampSecondsParser(),\n  T: new _TimestampMillisecondsParser.TimestampMillisecondsParser()\n};\nexports.parsers = parsers;","map":{"version":3,"names":["Object","defineProperty","exports","value","parsers","_EraParser","require","_YearParser","_LocalWeekYearParser","_ISOWeekYearParser","_ExtendedYearParser","_QuarterParser","_StandAloneQuarterParser","_MonthParser","_StandAloneMonthParser","_LocalWeekParser","_ISOWeekParser","_DateParser","_DayOfYearParser","_DayParser","_LocalDayParser","_StandAloneLocalDayParser","_ISODayParser","_AMPMParser","_AMPMMidnightParser","_DayPeriodParser","_Hour1to12Parser","_Hour0to23Parser","_Hour0To11Parser","_Hour1To24Parser","_MinuteParser","_SecondParser","_FractionOfSecondParser","_ISOTimezoneWithZParser","_ISOTimezoneParser","_TimestampSecondsParser","_TimestampMillisecondsParser","G","EraParser","y","YearParser","Y","LocalWeekYearParser","R","ISOWeekYearParser","u","ExtendedYearParser","Q","QuarterParser","q","StandAloneQuarterParser","M","MonthParser","L","StandAloneMonthParser","w","LocalWeekParser","I","ISOWeekParser","d","DateParser","D","DayOfYearParser","E","DayParser","e","LocalDayParser","c","StandAloneLocalDayParser","i","ISODayParser","a","AMPMParser","b","AMPMMidnightParser","B","DayPeriodParser","h","Hour1to12Parser","H","Hour0to23Parser","K","Hour0To11Parser","k","Hour1To24Parser","m","MinuteParser","s","SecondParser","S","FractionOfSecondParser","X","ISOTimezoneWithZParser","x","ISOTimezoneParser","t","TimestampSecondsParser","T","TimestampMillisecondsParser"],"sources":["/Users/derek/Desktop/Coding/React/greenii-form/node_modules/date-fns/parse/_lib/parsers/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parsers = void 0;\n\nvar _EraParser = require(\"./EraParser.js\");\n\nvar _YearParser = require(\"./YearParser.js\");\n\nvar _LocalWeekYearParser = require(\"./LocalWeekYearParser.js\");\n\nvar _ISOWeekYearParser = require(\"./ISOWeekYearParser.js\");\n\nvar _ExtendedYearParser = require(\"./ExtendedYearParser.js\");\n\nvar _QuarterParser = require(\"./QuarterParser.js\");\n\nvar _StandAloneQuarterParser = require(\"./StandAloneQuarterParser.js\");\n\nvar _MonthParser = require(\"./MonthParser.js\");\n\nvar _StandAloneMonthParser = require(\"./StandAloneMonthParser.js\");\n\nvar _LocalWeekParser = require(\"./LocalWeekParser.js\");\n\nvar _ISOWeekParser = require(\"./ISOWeekParser.js\");\n\nvar _DateParser = require(\"./DateParser.js\");\n\nvar _DayOfYearParser = require(\"./DayOfYearParser.js\");\n\nvar _DayParser = require(\"./DayParser.js\");\n\nvar _LocalDayParser = require(\"./LocalDayParser.js\");\n\nvar _StandAloneLocalDayParser = require(\"./StandAloneLocalDayParser.js\");\n\nvar _ISODayParser = require(\"./ISODayParser.js\");\n\nvar _AMPMParser = require(\"./AMPMParser.js\");\n\nvar _AMPMMidnightParser = require(\"./AMPMMidnightParser.js\");\n\nvar _DayPeriodParser = require(\"./DayPeriodParser.js\");\n\nvar _Hour1to12Parser = require(\"./Hour1to12Parser.js\");\n\nvar _Hour0to23Parser = require(\"./Hour0to23Parser.js\");\n\nvar _Hour0To11Parser = require(\"./Hour0To11Parser.js\");\n\nvar _Hour1To24Parser = require(\"./Hour1To24Parser.js\");\n\nvar _MinuteParser = require(\"./MinuteParser.js\");\n\nvar _SecondParser = require(\"./SecondParser.js\");\n\nvar _FractionOfSecondParser = require(\"./FractionOfSecondParser.js\");\n\nvar _ISOTimezoneWithZParser = require(\"./ISOTimezoneWithZParser.js\");\n\nvar _ISOTimezoneParser = require(\"./ISOTimezoneParser.js\");\n\nvar _TimestampSecondsParser = require(\"./TimestampSecondsParser.js\");\n\nvar _TimestampMillisecondsParser = require(\"./TimestampMillisecondsParser.js\");\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nvar parsers = {\n  G: new _EraParser.EraParser(),\n  y: new _YearParser.YearParser(),\n  Y: new _LocalWeekYearParser.LocalWeekYearParser(),\n  R: new _ISOWeekYearParser.ISOWeekYearParser(),\n  u: new _ExtendedYearParser.ExtendedYearParser(),\n  Q: new _QuarterParser.QuarterParser(),\n  q: new _StandAloneQuarterParser.StandAloneQuarterParser(),\n  M: new _MonthParser.MonthParser(),\n  L: new _StandAloneMonthParser.StandAloneMonthParser(),\n  w: new _LocalWeekParser.LocalWeekParser(),\n  I: new _ISOWeekParser.ISOWeekParser(),\n  d: new _DateParser.DateParser(),\n  D: new _DayOfYearParser.DayOfYearParser(),\n  E: new _DayParser.DayParser(),\n  e: new _LocalDayParser.LocalDayParser(),\n  c: new _StandAloneLocalDayParser.StandAloneLocalDayParser(),\n  i: new _ISODayParser.ISODayParser(),\n  a: new _AMPMParser.AMPMParser(),\n  b: new _AMPMMidnightParser.AMPMMidnightParser(),\n  B: new _DayPeriodParser.DayPeriodParser(),\n  h: new _Hour1to12Parser.Hour1to12Parser(),\n  H: new _Hour0to23Parser.Hour0to23Parser(),\n  K: new _Hour0To11Parser.Hour0To11Parser(),\n  k: new _Hour1To24Parser.Hour1To24Parser(),\n  m: new _MinuteParser.MinuteParser(),\n  s: new _SecondParser.SecondParser(),\n  S: new _FractionOfSecondParser.FractionOfSecondParser(),\n  X: new _ISOTimezoneWithZParser.ISOTimezoneWithZParser(),\n  x: new _ISOTimezoneParser.ISOTimezoneParser(),\n  t: new _TimestampSecondsParser.TimestampSecondsParser(),\n  T: new _TimestampMillisecondsParser.TimestampMillisecondsParser()\n};\nexports.parsers = parsers;"],"mappings":"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"},"metadata":{},"sourceType":"script"}